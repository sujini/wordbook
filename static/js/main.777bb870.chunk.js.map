{"version":3,"sources":["logo.svg","redux/user/user.types.js","redux/user/user.reducer.js","redux/word/word.types.js","redux/word/word.reducer.js","redux/root-reducer.js","firebase/firebase.utils.js","redux/user/user.actions.js","redux/user/user.sagas.js","redux/word/word.actions.js","redux/word/word.sagas.js","redux/root-saga.js","redux/store.js","redux/user/user.selectors.js","components/header/header.component.jsx","components/with-spinner/with-spinner.styles.jsx","components/with-spinner/with-spinner.component.jsx","redux/word/word.selectors.js","components/word-item/word-item.component.jsx","pages/homepage/homepage.component.jsx","pages/homepage/homepage.container.jsx","components/word-list/word-list.component.jsx","components/form-input/form-input.component.jsx","components/custom-button/custom-button.styles.jsx","components/custom-button/custom-button.component.jsx","components/create-word/create-word.component.jsx","pages/word/word.component.jsx","pages/word/word.container.jsx","components/sign-in/sign-in.component.jsx","components/sign-up/sign-up.component.jsx","pages/sign-in-and-sign-up/sign-in-and-sign-up.component.jsx","App.js","index.js"],"names":["module","exports","userActionTypes","SET_CURRENT_USER","GOOGLE_SIGN_IN_START","EMAIL_SIGN_IN_START","SIGN_IN_SUCCESS","SIGN_IN_FAILURE","CHECK_USER_SESSION","SIGN_OUT_START","SIGN_OUT_SUCCESS","SIGN_OUT_FAILURE","SIGN_UP_START","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","INITIAL_STATE","currentUser","error","signCheckEnd","userReducer","state","action","type","payload","wordActionTypes","CREATE_WORD_START","CREATE_WORD_SUCCESS","CREATE_WORD_FAILURE","FETCH_WORD_START","FETCH_WORD_START_FROM_USER","FETCH_WORD_SUCCESS","FETCH_WORD_FAILURE","collections","isFetching","wordReducer","persistConfig","key","storage","whitelist","rootReducer","combineReducers","user","word","persistReducer","createUserProfileDocument","userAuth","additionalData","a","userRef","firestore","doc","uid","get","exists","displayName","email","createdAt","Date","set","console","log","message","createWordDocument","wordRef","collection","add","convertWordsnapshotToMap","words","transformedWord","docs","map","data","content","meaning","id","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","getCurrentUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInFailure","signUpSuccess","addtionalData","getSnapshotFromUserAuth","signInWithGoogle","onGoogleSignInStart","signInWithEmail","onEmailSignInStart","isUserAuthenticated","onCheckUserSession","signOut","onSignOutStart","signUp","onSignUpStart","signInAfterSignUp","onSignUpSuccess","userSagas","call","userSnapshot","put","signInWithPopup","takeLatest","password","signInWithEmailAndPassword","createUserWithEmailAndPassword","all","fetchWordsSuccess","fetchWordsFailure","ceateWord","fetchWordsAsyncFromUser","fetchWordsAsync","fetchWordsStartFromUser","fetchWordsStart","onCreateWordStart","wordSagas","where","snapshot","wordsMap","rootSaga","sagaMiddleware","createSagaMiddleware","middlwares","store","createStore","applyMiddleware","run","persistor","persistStore","selectUser","selectCurrentUser","createSelector","selectSignCheckEnd","mapStateToProps","createStructuredSelector","connect","dispatch","signOutStart","className","to","as","onClick","SpinnerOverlay","styled","div","SpinnerContainer","WithSpinner","WrappedComponent","isLoading","otherProps","selectWord","selectCollections","WordItem","index","item","blur","class","fetchWordStart","useEffect","_num","HomePageContainer","compose","HomePage","FormInput","handleChange","label","onChange","value","length","buttonStyles","css","invertedButtonStyles","googleSignInStyles","CustomButtonContainer","button","props","isGoogleSignIn","inverted","CustomButton","children","createWordStart","useState","wordContent","setwordContent","event","target","name","handleSubmit","preventDefault","onSubmit","required","history","push","WordPageContainer","WordPage","googleSignInStart","emailSignInStart","userCrendentials","setCrendentials","signUpStart","userCredentials","confirmPassword","alert","hasOwnProperty","checkUserSession","exact","path","component","render","ReactDOM","document","getElementById"],"mappings":"iJAAAA,EAAOC,QAAU,IAA0B,kC,mUCgB5BC,EAhBQ,CACnBC,iBAAmB,mBACnBC,qBAAqB,uBACrBC,oBAAoB,sBACpBC,gBAAgB,kBAChBC,gBAAgB,kBAChBC,mBAAmB,yBACnBC,eAAe,iBACfC,iBAAiB,mBACjBC,iBAAiB,mBACjBC,cAAc,gBACdC,gBAAgB,kBAChBC,gBAAgB,mBCVdC,EAAgB,CAClBC,YAAY,KACZC,MAAM,KACNC,cAAa,GAkCFC,EA/BK,WAA+B,IAA9BC,EAA6B,uDAAvBL,EAAcM,EAAS,uCAC9C,OAAOA,EAAOC,MACV,KAAKpB,EAAgBI,gBACjB,kCACOc,GADP,IAEIJ,YAAYK,EAAOE,QACnBN,MAAM,KACNC,cAAa,IAGrB,KAAKhB,EAAgBQ,iBACjB,kCACOU,GADP,IAEIJ,YAAY,KACZC,MAAM,KACNC,cAAa,IAErB,KAAKhB,EAAgBK,gBACrB,KAAKL,EAAgBS,iBACrB,KAAKT,EAAgBY,gBACjB,kCACOM,GADP,IAEIH,MAAMI,EAAOE,QACbL,cAAa,IAErB,QACI,OAAOE,ICvBJI,EAXQ,CACnBC,kBAAoB,oBACpBC,oBAAoB,sBACpBC,oBAAoB,sBACpBC,iBAAiB,mBACjBC,2BAA2B,6BAC3BC,mBAAmB,qBACnBC,mBAAmB,sBCLjBhB,EAAgB,CAClBiB,YAAc,KACdC,YAAW,EACXhB,MAAM,MAuDKiB,EApDK,WAA+B,IAA9Bd,EAA6B,uDAAvBL,EAAcM,EAAS,uCAC9C,OAAOA,EAAOC,MACV,KAAKE,EAAgBC,kBACjB,kCACOL,GADP,IAEIa,YAAW,EACXhB,MAAM,OAEd,KAAKO,EAAgBE,oBACjB,kCACON,GADP,IAEIa,YAAW,EACXD,YAAYX,EAAOE,QACnBN,MAAM,OAEd,KAAKO,EAAgBG,oBACjB,kCACOP,GADP,IAEIa,YAAW,EACXhB,MAAMI,EAAOE,UAErB,KAAKC,EAAgBI,iBAMrB,KAAKJ,EAAgBK,2BACjB,kCACOT,GADP,IAEIa,YAAW,EACXhB,MAAM,OAEd,KAAKO,EAAgBM,mBACjB,kCACOV,GADP,IAEIa,YAAW,EACXD,YAAYX,EAAOE,QACnBN,MAAM,OAEd,KAAKO,EAAgBO,mBACjB,kCACOX,GADP,IAEIa,YAAW,EACXhB,MAAMI,EAAOE,UAErB,QACI,OAAOH,IChDbe,EAAgB,CACnBC,IAAK,OACLC,YACAC,UAAU,IAGPC,EAAcC,YAAgB,CACjCC,KAAKtB,EACLuB,KAAKR,IAGOS,cAAeR,EAAcI,G,gDCD7BK,G,YAAyB,uCAAG,WAAOC,EAASC,GAAhB,qBAAAC,EAAA,yDACjCF,EADiC,wDAE/BG,EAAUC,EAAUC,IAAV,gBAAuBL,EAASM,MAFX,SAGdH,EAAQI,MAHM,iBAKxBC,OALwB,wBAM1BC,EAAoBT,EAApBS,YAAYC,EAAQV,EAARU,MACbC,EAAY,IAAIC,KAPW,mBASvBT,EAAQU,IAAR,aACFJ,cACAC,QACAC,aACGV,IAbsB,0DAiB7Ba,QAAQC,IAAI,sBAAsB,KAAMC,SAjBX,iCAqB9Bb,GArB8B,0DAAH,yDAyBzBc,EAAkB,uCAAG,WAAOjB,EAAUH,EAAKI,GAAtB,iBAAAC,EAAA,yDAC5BF,EAD4B,wDAE1BkB,EAAUd,EAAUe,WAAW,SAC/BR,EAAY,IAAIC,KAHU,kBAKtBM,EAAQE,IAAR,2BACCvB,GADD,IAEFc,YACAL,IAAIN,EAASM,KACVL,IATqB,uDAa5Ba,QAAQC,IAAI,sBAAsB,KAAMC,SAbZ,iCAiBzBE,GAjByB,yDAAH,0DAoBlBG,EAA2B,SAAAC,GACtC,IAAMC,EAAkBD,EAAME,KAAKC,KAAK,SAAApB,GAAO,IAAD,EACZA,EAAIqB,OAA3BC,EADmC,EACnCA,QAAQC,EAD2B,EAC3BA,QAAQtB,EADmB,EACnBA,IACvB,MAAM,CACFuB,GAAGxB,EAAIwB,GACPF,UACAC,UACAtB,UAIR,OADAQ,QAAQC,IAAIQ,GACLA,GASTO,IAASC,cA5EG,CACVC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,wCACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAsEV,IA4BMC,EAAiB,WAC1B,OAAO,IAAIC,SAAQ,SAACC,EAAQC,GACxB,IAAMC,EAAcC,EAAKC,oBAAmB,SAAA9C,GACxC4C,IACAF,EAAQ1C,KACV2C,OAIGE,EAAOf,IAASe,OAChBzC,EAAY0B,IAAS1B,YAErB2C,EAAiB,IAAIjB,IAASe,KAAKG,mBAChDD,EAAeE,oBAAoB,CAACC,OAAO,mBAG5BpB,EAAf,EAFO,ICpHIqB,EAAgB,SAAA/E,GAAK,MAAK,CACnCK,KAAMpB,EAAgBK,gBACtBgB,QAAQN,IAyBCgF,EAAgB,SAAC,GAAD,IAAExD,EAAF,EAAEA,KAAKyD,EAAP,EAAOA,cAAP,MAA0B,CACnD5E,KAAMpB,EAAgBW,gBACtBU,QAAQ,CAACkB,OAAKyD,mB,WClCDC,I,WASAC,I,WAQAC,I,WAIAC,I,WAQAC,I,WAGAC,I,WAUAC,I,WAGAC,I,WAQAC,I,WAGAC,I,WASAC,I,WAGAC,I,WAGAC,I,WAGAC,IA1EV,SAAUb,GAAwBtD,GAAlC,yEAEiB,OAFjB,kBAEuBoE,YAAKrE,EAA0BC,GAFtD,OAGsB,OADfG,EAFP,gBAG4BA,EAAQI,MAHpC,OAIC,OADM8D,EAHP,gBAIOC,aDHe1E,ECGG,aAAEiC,GAAGwC,EAAaxC,IAAMwC,EAAa3C,QDHhC,CACjCjD,KAAMpB,EAAgBI,gBACtBiB,QAASkB,KCHN,+BAMC,OAND,oCAMO0E,YAAInB,EAAc,EAAD,KANxB,kCDCsB,IAAAvD,ICDtB,iBASA,SAAU2D,KAAV,yEAEgB,OAFhB,kBAEsBV,EAAK0B,gBAAgBxB,GAF3C,OAGC,OAHD,SAEQnD,EAFR,EAEQA,KAFR,SAGO0D,GAAwB1D,GAH/B,8BAKC,OALD,mCAKO0E,YAAInB,EAAc,EAAD,KALxB,qDAQA,SAAUK,KAAV,iEAEH,OADA1C,QAAQC,IAAI,uBADT,SAEGyD,YAAWnH,EAAgBE,qBAAqBgG,IAFnD,uCAIA,SAAUE,GAAV,kFAEgB,OAFhB,IAA2B/E,QAASgC,EAApC,EAAoCA,MAAM+D,EAA1C,EAA0CA,SAA1C,kBAEsB5B,EAAK6B,2BAA2BhE,EAAM+D,GAF5D,OAGC,OAHD,SAEQ7E,EAFR,EAEQA,KAFR,SAGO0D,GAAwB1D,GAH/B,+BAKC,OALD,oCAKO0E,YAAInB,EAAc,EAAD,KALxB,sDAQA,SAAUO,KAAV,iEACH,OADG,SACGc,YAAWnH,EAAgBG,oBAAoBiG,IADlD,uCAGA,SAAUE,KAAV,uEAGkB,OAHlB,kBAGwBnB,IAHxB,UAGOxC,EAHP,uBAIe,OAJf,SAIqBsE,YAAInB,KAJzB,OAKC,OALD,SAKOG,GAAwBtD,GAL/B,+BAOC,OAPD,oCAOOsE,YAAInB,EAAc,EAAD,KAPxB,sDAUA,SAAUS,KAAV,iEACH,OADG,SACGY,YAAWnH,EAAgBM,mBAAmBgG,IADjD,uCAGA,SAAUE,KAAV,iEAEC,OAFD,kBAEOhB,EAAKgB,UAFZ,OAGC,OAHD,SAGOS,YD5BsB,CAChC7F,KAAMpB,EAAgBQ,mBCwBnB,8BAKC,OALD,mCAKOyG,aD3BgBlG,EC2BG,EAAD,GD3BQ,CACpCK,KAAMpB,EAAgBS,iBACtBY,QAAQN,KCoBL,kCDtBuB,IAAAA,ICsBvB,gBAQA,SAAU0F,KAAV,iEACH,OADG,SACGU,YAAWnH,EAAgBO,eAAeiG,IAD7C,uCAGA,SAAUE,GAAV,oFAEgB,OAFhB,IAAkBrF,QAASgC,EAA3B,EAA2BA,MAAM+D,EAAjC,EAAiCA,SAAShE,EAA1C,EAA0CA,YAA1C,kBAEsBoC,EAAK8B,+BAA+BjE,EAAM+D,GAFhE,OAGC,OAHD,SAEQ7E,EAFR,EAEQA,KAFR,SAGO0E,YAAIlB,EAAc,CAACxD,OAAKK,eAAe,CAACQ,kBAH/C,+BAKC,OALD,oCAKO6D,aDzBelG,ECyBG,EAAD,GDzBQ,CACnCK,KAAMpB,EAAgBY,gBACtBS,QAAQN,KCkBL,kCDpBsB,IAAAA,ICoBtB,iBASA,SAAU4F,KAAV,iEACH,OADG,SACGQ,YAAWnH,EAAgBU,cAAcgG,IAD5C,uCAGA,SAAUE,GAAV,4EACH,OADG,IAA6BvF,QAASkB,EAAtC,EAAsCA,KAAtC,EAA2CK,eAA3C,SACGqD,GAAwB1D,GAD3B,uCAGA,SAAUsE,KAAV,iEACH,OADG,SACGM,YAAWnH,EAAgBW,gBAAgBiG,IAD9C,uCAGA,SAAUE,KAAV,iEACH,OADG,SACGS,YAAI,CAACR,YAAKZ,IAAqBY,YAAKV,IAAoBU,YAAKR,IAAoBQ,YAAKN,IAAgBM,YAAKJ,IAAeI,YAAKF,MADlI,uCC5DA,IAoBMW,GAAoB,SAAA1F,GAAW,MAAI,CAC9CV,KAAME,EAAgBM,mBACtBP,QAAQS,IAEG2F,GAAoB,SAAA1G,GAAK,MAAK,CACzCK,KAAME,EAAgBO,mBACtBR,QAAQN,I,YCxCO2G,I,YAgBAC,I,YAgBAC,I,YAUAC,I,YAGAC,I,YAGAC,I,YAGAC,IAnDV,SAAUN,GAAV,sFAGkB,OAHlB,IAAqBrG,QAASiD,EAA9B,EAA8BA,QAAQC,EAAtC,EAAsCA,QAAtC,kBAGwBY,IAHxB,UAGOxC,EAHP,wDAKiB,OALjB,SAKuBoE,YAAKnD,EAAmBjB,EAAS,CAAC2B,UAAQC,YALjE,OAMkB,OADXV,EALP,iBAMwBA,EAAQoE,MAAM,MAAO,KAAMtF,EAASM,KAAKC,MANjE,QAOkB,OADXgF,EANP,iBAOwBnB,YAAK/C,EAAyBkE,GAPtD,QAQC,OADMC,EAPP,iBAQOlB,YDWkC,CAC9C7F,KAAME,EAAgBE,oBACtBH,QCbkC8G,IAR7B,gCAUC,OAVD,oCAUOlB,aDamBlG,ECbG,EAAD,GDaQ,CACzCK,KAAME,EAAgBG,oBACtBJ,QAAQN,KCzBH,kCDuB0B,IAAAA,ICvB1B,kBAgBA,SAAU4G,KAAV,6EAGkB,OAHlB,kBAGwBxC,IAHxB,UAGOxC,EAHP,wDAQkB,OAHjBc,QAAQC,IAAIf,EAASM,KAEfY,EAAUd,EAAUe,WAAW,SAPtC,UAQwBD,EAAQoE,MAAM,MAAO,KAAMtF,EAASM,KAAKC,MARjE,QASkB,OADXgF,EARP,iBASwBnB,YAAK/C,EAAyBkE,GATtD,QAUC,OADMC,EATP,iBAUOlB,YAAIO,GAAkBW,IAV7B,gCAYC,OAZD,oCAYOlB,YAAIQ,GAAkB,KAAM9D,UAZnC,uDAgBA,SAAUiE,KAAV,2EAGkB,OAHlB,SAEO/D,EAAUd,EAAUe,WAAW,SAFtC,SAGwBD,EAAQX,MAHhC,OAIkB,OADXgF,EAHP,gBAIwBnB,YAAK/C,EAAyBkE,GAJtD,OAKC,OADMC,EAJP,iBAKOlB,YAAIO,GAAkBW,IAL7B,gCAOC,OAPD,oCAOOlB,YAAIQ,GAAkB,KAAM9D,UAPnC,uDAUA,SAAUkE,KAAV,iEACH,OADG,SACGV,YAAW7F,EAAgBK,2BAA2BgG,IADzD,wCAGA,SAAUG,KAAV,iEACH,OADG,SACGX,YAAW7F,EAAgBI,iBAAiBkG,IAD/C,wCAGA,SAAUG,KAAV,iEACH,OADG,SACGZ,YAAW7F,EAAgBC,kBAAkBmG,IADhD,wCAGA,SAAUM,KAAV,iEACH,OADG,SACGT,YAAI,CAACR,YAAKgB,IAAmBhB,YAAKe,IAAiBf,YAAKc,MAD3D,wC,gBCpDkBO,IAAV,SAAUA,KAAV,iEACX,OADW,SACLb,YAAI,CACNR,YAAKiB,IACLjB,YAAKD,MAHE,wCCIf,IAAMuB,GAAgBC,cAChBC,GAAa,CAACF,IAMb,IAAMG,GAAQC,YAAYpG,EAAYqG,IAAe,WAAf,EAAmBH,KAChEF,GAAeM,IAAIP,IAEZ,IAAMQ,GAAYC,YAAaL,I,iCChBhCM,GAAa,SAAA5H,GAAK,OAAIA,EAAMqB,MAErBwG,GAAoBC,aAC7B,CAACF,KACD,SAAAvG,GAAI,OAAIA,EAAKzB,eAGJmI,GAAqBD,aAC9B,CAACF,KACD,SAAAvG,GAAI,OAAIA,EAAKvB,gBCkBXkI,I,MAAkBC,aAAyB,CAC7CrI,YAAYiI,MAGDK,eAAQF,IAPI,SAAAG,GAAQ,MAAK,CACpCC,aAAa,kBAAID,EPLa,CAC9BjI,KAAMpB,EAAgBO,qBOUX6I,EAvBA,SAAC,GAAD,IAAEtI,EAAF,EAAEA,YAAYwI,EAAd,EAAcA,aAAd,OACX,yBAAKC,UAAU,UACX,kBAAC,IAAD,CAAMA,UAAU,iBAAiBC,GAAG,KAApC,YAGA,yBAAKD,UAAU,WACX,kBAAC,IAAD,CAAMA,UAAU,SAASC,GAAG,SAA5B,QACC1I,EACD,kBAAC,IAAD,CAAMyI,UAAU,SAASE,GAAG,MAAMC,QAASJ,GAA3C,YAEA,kBAAC,IAAD,CAAMC,UAAU,SAASC,GAAG,WAA5B,gB,usBClBL,IAAMG,GAAiBC,KAAOC,IAAV,MAQdC,GAAmBF,KAAOC,IAAV,MCKdE,GAZK,SAACC,GAUjB,OATgB,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,UAAcC,EAAc,8BAC1C,OAAOD,EACH,kBAACN,GAAD,KACI,kBAACG,GAAD,OAGJ,kBAACE,EAAqBE,KCR5BC,GAAa,SAAAjJ,GAAK,OAAEA,EAAMsB,MAEnB4H,GAAoBpB,aAC7B,CAACmB,KACD,SAAA3H,GAAI,OAAEA,EAAKV,eCYAuI,IDV2BrB,aACtC,CAACmB,KACD,SAAA3H,GAAI,OAAEA,EAAKT,cAG0BiH,aACrC,CAACmB,KACD,SAAA3H,GAAI,QAAMA,EAAKV,eCdF,SAAC,GAAqB,IAApBwI,EAAmB,EAAnBA,MAAMC,EAAa,EAAbA,KAAKC,EAAQ,EAARA,KAC1B,OACI,wBAAIjB,UAAU,QACV,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,cACf,0BAAMkB,MAAM,OAAOH,GACnB,4BAAKC,EAAKjG,SACV,uBAAGiF,UAAWiB,EAAK,OAAD,IAAaD,EAAKhG,cC+B9C2E,GAAkBC,aAAyB,CAC7CrH,YAAYsI,GACZtJ,YAAYiI,KAGDK,eAAQF,IARI,SAAAG,GAAQ,MAAI,CACnCqB,eAAe,kBAAIrB,EVJc,CACnCjI,KAAME,EAAgBI,uBUUT0H,EA7BE,SAAC,GAA4C,IAA3CtH,EAA0C,EAA1CA,YAAY4I,EAA8B,EAA9BA,eAAe5J,EAAe,EAAfA,YAM1C,OALA6J,qBAAW,WACPD,MACF,CAACA,IAIC,6BACI,wBAAInB,UAAU,aAEVzH,GAAeA,EAAYsC,KAAI,SAACN,EAAWwG,GAAZ,OAC3B,kBAAC,GAAD,CAAUpI,IAAK4B,EAAWU,GAAI8F,OAdlCM,EAcgDN,EAAM,EAb3DM,EAAK,GAAG,IAAIA,EAAKA,GAa8CL,KAAMzG,EAAY0G,MAAM1J,IAdnF,IAAC8J,UCJV1B,GAAkBC,aAAyB,CAC7Cc,UAAU,SAAA/I,GAAK,OAAG+H,GAAmB/H,MAI1B2J,GADWC,YAAQ1B,YAAQF,IAAiBa,GAAjCe,CAA8CC,ICuBlE7B,I,MAAkBC,aAAyB,CAC7CrH,YAAYsI,MAGDhB,eAAQF,IAPI,SAAAG,GAAQ,MAAI,CACnCxB,wBAAwB,kBAAIwB,EZGc,CAC5CjI,KAAME,EAAgBK,iCYETyH,EA5BE,SAAC,GAAyC,IAAxCtH,EAAuC,EAAvCA,YAAY+F,EAA2B,EAA3BA,wBAM3B,OALA8C,qBAAW,WACP9C,MACF,CAACA,IAIC,6BACI,wBAAI0B,UAAU,aAEVzH,GAAeA,EAAYsC,KAAI,SAACN,EAAWwG,GAAZ,OAC3B,kBAAC,GAAD,CAAUpI,IAAK4B,EAAWU,GAAI8F,OAdlCM,EAcgDN,EAAM,EAb3DM,EAAK,GAAG,IAAIA,EAAKA,GAa8CL,KAAMzG,IAdjE,IAAC8G,U,kBCQDI,I,MAbG,SAAC,GAAD,IAAEC,EAAF,EAAEA,aAAaC,EAAf,EAAeA,MAAShB,EAAxB,gDACd,yBAAKX,UAAU,SACX,yCAAOA,UAAU,aAAa4B,SAAUF,GAAkBf,IAEtDgB,EACA,2BAAO3B,UAAS,UAAKW,EAAWkB,MAAMC,OAAO,SAAS,GAAtC,sBACXH,GAEJ,Q,onCCVb,IAAMI,GAAeC,aAAH,MAUZC,GAAuBD,aAAH,MAWpBE,GAAqBF,aAAH,MAgBXG,GAAwB9B,KAAO+B,OAAV,MANV,SAAAC,GACpB,OAAGA,EAAMC,eACEJ,GAEJG,EAAME,SAASN,GAAqBF,MC3BhCS,GALK,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAYJ,EAAd,oCAChB,kBAACF,GAA0BE,EAAQI,ICyCxB5C,eAAQ,MAHI,SAAAC,GAAQ,MAAG,CACpC4C,gBAAgB,SAAC3H,EAAQC,GAAT,OAAmB8E,EhBzBgB,CACnDjI,KAAME,EAAgBC,kBACtBF,QgBuB4D,CAACiD,UAAQC,iBAExD6E,EAvCG,SAAC,GAAsB,IAArB6C,EAAoB,EAApBA,gBAAoB,EACDC,mBAAS,CAAC5H,QAAQ,GAAGC,QAAQ,KAD5B,oBAC/B4H,EAD+B,KACnBC,EADmB,KAE/B9H,EAAkB6H,EAAlB7H,QAAQC,EAAU4H,EAAV5H,QAET0G,EAAe,SAACoB,GAAW,IAAD,EACTA,EAAMC,OAApBC,EADuB,EACvBA,KAAKnB,EADkB,EAClBA,MACZgB,EAAe,2BAAID,GAAL,mBAAkBI,EAAMnB,MAGlCoB,EAAY,uCAAG,WAAMH,GAAN,SAAAxJ,EAAA,sDACnBwJ,EAAMI,iBACNR,EAAgB3H,EAAQC,GACxB6H,EAAe,CAAC9H,QAAQ,GAAGC,QAAQ,KAHhB,2CAAH,sDAQhB,OACI,0BAAMgF,UAAU,cAAcmD,SAAUF,GAEpC,yBAAKjD,UAAU,qBACb,kBAAC,GAAD,CAAWgD,KAAK,UAAUnL,KAAK,OAAOgK,MAAO9G,EAAS6G,SAAUF,EAAcC,MAAM,UAAUyB,UAAQ,IAGtG,kBAAC,GAAD,CAAWJ,KAAK,UAAUnL,KAAK,OAAO+J,SAAUF,EAAcG,MAAO7G,EAAS2G,MAAM,UAAUyB,UAAQ,IAEtG,kBAAC,GAAD,CAAcvL,KAAK,UAAnB,qBCNR8H,I,MAAkBC,aAAyB,CAC7CrI,YAAYiI,MAIDK,eAAQF,GAARE,EAtBC,SAAC,GAA0B,IAAzBwD,EAAwB,EAAxBA,QAAQ9L,EAAgB,EAAhBA,YAMtB,OALF6J,qBAAU,WACH7J,GAAa8L,EAAQC,KAAK,aAC/B/L,GAIE,yBAAKyI,UAAU,aACb,kBAAC,GAAD,MACA,kBAAC,GAAD,UCXFL,GAAkBC,aAAyB,CAC7Cc,UAAU,SAAA/I,GAAK,OAAG+H,GAAmB/H,MAK1B4L,GAFWhC,YAAQ1B,YAAQF,IAAiBa,GAAjCe,CAA8CiC,ICwCzD3D,I,YAAAA,YAAQ,MAJI,SAAAC,GAAQ,MAAG,CAClC2D,kBAAmB,kBAAI3D,ErB9Ca,CACpCjI,KAAMpB,EAAgBE,wBqB8CtB+M,iBAAiB,SAAC5J,EAAM+D,GAAP,OAAkBiC,ErBpCc,CACjDjI,KAAMpB,EAAgBG,oBACtBkB,QqBkC6D,CAACgC,QAAM+D,kBAEzDgC,EA7CD,SAAC,GAAwC,IAAvC6D,EAAsC,EAAtCA,iBAAiBD,EAAqB,EAArBA,kBAAqB,EACPd,mBAAS,CAAC7I,MAAM,GAAG+D,SAAS,KADrB,oBAC3C8F,EAD2C,KAC1BC,EAD0B,KAE3C9J,EAAiB6J,EAAjB7J,MAAM+D,EAAW8F,EAAX9F,SACPoF,EAAY,uCAAG,WAAMH,GAAN,SAAAxJ,EAAA,sDACjBwJ,EAAMI,iBAENQ,EAAiB5J,EAAM+D,GAHN,2CAAH,sDAcZ6D,EAAe,SAAAoB,GAAS,IAAD,EACJA,EAAMC,OAApBlB,EADkB,EAClBA,MAAMmB,EADY,EACZA,KACbY,EAAgB,2BAAID,GAAL,mBAAuBX,EAAMnB,MAG5C,OACI,yBAAK7B,UAAU,WACX,yDACA,sEACA,0BAAMmD,SAAUF,GAEZ,kBAAC,GAAD,CAAWD,KAAK,QAAQnL,KAAK,QAAQgK,MAAO/H,EAAO8H,SAAUF,EAAcC,MAAM,QAAQyB,UAAQ,IAEjG,kBAAC,GAAD,CAAWJ,KAAK,WAAWnL,KAAK,WAAWgK,MAAOhE,EAAU+D,SAAUF,EAAcC,MAAM,WAAWyB,UAAQ,IAC7G,yBAAKpD,UAAU,WACX,kBAAC,GAAD,CAAcnI,KAAK,UAAnB,WACA,kBAAC,GAAD,CAAcA,KAAK,SAASsI,QAASsD,EAAmBnB,gBAAc,GAAtE,8BC4BTzC,I,MAAAA,YAAQ,MAHI,SAAAC,GAAQ,MAAI,CACnC+D,YAAc,SAAAC,GAAe,OAAEhE,EtBjCR,SAAAgE,GAAe,MAAI,CAC1CjM,KAAMpB,EAAgBU,cACtBW,QAAQgM,GsB+BgCD,CAAYC,QAEzCjE,EA7DA,SAAC,GAAiB,IAAhBgE,EAAe,EAAfA,YAAe,EAEelB,mBAAS,CAAC9I,YAAY,GAC7DC,MAAM,GACN+D,SAAS,GACTkG,gBAAgB,KALQ,oBAErBJ,EAFqB,KAEJC,EAFI,KAMpB/J,EAA4C8J,EAA5C9J,YAAYC,EAAgC6J,EAAhC7J,MAAM+D,EAA0B8F,EAA1B9F,SAASkG,EAAiBJ,EAAjBI,gBAC7Bd,EAAY,uCAAG,WAAMH,GAAN,SAAAxJ,EAAA,yDACjBwJ,EAAMI,iBAEHrF,IAAWkG,EAHG,uBAIbC,MAAM,yBAJO,0BAQjBH,EAAY,CAAChK,cAAYC,QAAM+D,aARd,2CAAH,sDA0BZ6D,EAAe,SAAAoB,GAAS,IAAD,EACJA,EAAMC,OAApBlB,EADkB,EAClBA,MAAMmB,EADY,EACZA,KACbY,EAAgB,2BAAID,GAAL,mBAAuBX,EAAMnB,MAGhD,OACI,yBAAK7B,UAAU,WACX,wBAAIA,UAAU,SAAd,4BACA,sEACA,0BAAMA,UAAU,eAAemD,SAAUF,GACrC,kBAAC,GAAD,CAAWD,KAAK,cAAcnL,KAAK,OAAOgK,MAAOhI,EAAa+H,SAAUF,EAAcC,MAAM,cAAcyB,UAAQ,IAElH,kBAAC,GAAD,CAAWJ,KAAK,QAAQnL,KAAK,QAAQgK,MAAO/H,EAAO8H,SAAUF,EAAcC,MAAM,QAAQyB,UAAQ,IAEjG,kBAAC,GAAD,CAAWJ,KAAK,WAAWnL,KAAK,WAAWgK,MAAOhE,EAAU+D,SAAUF,EAAcC,MAAM,WAAWyB,UAAQ,IAC7G,kBAAC,GAAD,CAAWJ,KAAK,kBAAkBnL,KAAK,WAAWgK,MAAOkC,EAAiBnC,SAAUF,EAAcC,MAAM,kBAAkByB,UAAQ,IAElI,kBAAC,GAAD,CAAcvL,KAAK,UAAnB,iBC9BDgI,gBAHS,SAAC,GAAD,MAAW,CAC/BrI,MADoB,EAAEwB,KACXxB,SAEAqI,EArBS,SAAC,GAAY,IAAXrI,EAAU,EAAVA,MAItB,OAHA4J,qBAAW,WACPlH,QAAQC,IAAI3C,GAAQA,EAAMyM,eAAe,WAC3C,CAACzM,IAEH,yBAAKwI,UAAU,uBACX,0BAAMA,UAAU,SAASxI,GAAQA,EAAMyM,eAAe,QAAQzM,EAAM4C,QAA3C,KACzB,yBAAK4F,UAAU,SAGf,kBAAC,GAAD,MACA,kBAAC,GAAD,WC4BFL,I,MAAkBC,aAAyB,CAC/CrI,YAAYiI,MAECK,eAAQF,IANI,SAAAG,GAAQ,MAAI,CACrCoE,iBAAiB,kBAAIpE,ExBzBgB,CACnCjI,KAAMpB,EAAgBM,yBwB6BX8I,EA7BH,YAA0C,IAAhCqE,EAA+B,EAA/BA,iBAAiB3M,EAAc,EAAdA,YAQrC,OANA6J,qBAAW,WACT8C,MAGA,CAACA,IAGD,yBAAKlE,UAAU,OACb,kBAAC,GAAD,MACA,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOmE,OAAK,EAACC,KAAK,IAAIC,UAAW/C,KACjC,kBAAC,KAAD,CAAO8C,KAAK,YAAYC,UAAW/C,KACnC,kBAAC,KAAD,CAAO8C,KAAK,QAAQC,UAAWd,KAE/B,kBAAC,KAAD,CAAOY,OAAK,EAACC,KAAK,UAAUE,OAAQ,kBAAM/M,EAAa,kBAAC,KAAD,CAAU0I,GAAG,MAAQ,kBAAC,GAAD,SAC5E,kBAAC,KAAD,CAAOkE,OAAK,EAACC,KAAK,UAAUE,OAAQ,kBAAM/M,EAAa,kBAAC,KAAD,CAAU0I,GAAG,MAAQ,kBAAC,GAAD,cCzBpFsE,IAASD,OACP,kBAAC,IAAD,CAAUrF,MAAOA,IACf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAaI,UAAWA,IACtB,kBAAC,GAAD,SAINmF,SAASC,eAAe,W","file":"static/js/main.777bb870.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","const userActionTypes ={\n    SET_CURRENT_USER : 'SET_CURRENT_USER',\n    GOOGLE_SIGN_IN_START:'GOOGLE_SIGN_IN_START',\n    EMAIL_SIGN_IN_START:'EMAIL_SIGN_IN_START',\n    SIGN_IN_SUCCESS:'SIGN_IN_SUCCESS',\n    SIGN_IN_FAILURE:'SIGN_IN_FAILURE',\n    CHECK_USER_SESSION:' CHECK_USER_SESSION',\n    SIGN_OUT_START:'SIGN_OUT_START',\n    SIGN_OUT_SUCCESS:'SIGN_OUT_SUCCESS',\n    SIGN_OUT_FAILURE:'SIGN_OUT_FAILURE',\n    SIGN_UP_START:'SIGN_UP_START',\n    SIGN_UP_SUCCESS:'SIGN_UP_SUCCESS',\n    SIGN_UP_FAILURE:'SIGN_UP_FAILURE'\n\n}\n\nexport default userActionTypes;","import userActionTypes from './user.types';\n\nconst INITIAL_STATE = {\n    currentUser:null,\n    error:null,\n    signCheckEnd:false\n}\n\nconst userReducer = (state=INITIAL_STATE,action)=>{\n    switch(action.type){\n        case userActionTypes.SIGN_IN_SUCCESS:\n            return{\n                ...state,\n                currentUser:action.payload,\n                error:null,\n                signCheckEnd:true\n            }\n        \n        case userActionTypes.SIGN_OUT_SUCCESS:\n            return{\n                ...state,\n                currentUser:null,\n                error:null,\n                signCheckEnd:true\n            }\n        case userActionTypes.SIGN_IN_FAILURE:\n        case userActionTypes.SIGN_OUT_FAILURE:\n        case userActionTypes.SIGN_UP_FAILURE:\n            return{\n                ...state,\n                error:action.payload,\n                signCheckEnd:true\n            }\n        default:\n            return state;\n\n    }\n}\n\nexport default userReducer;","const wordActionTypes ={\n    CREATE_WORD_START : 'CREATE_WORD_START',\n    CREATE_WORD_SUCCESS:'CREATE_WORD_SUCCESS',\n    CREATE_WORD_FAILURE:'CREATE_WORD_FAILURE',\n    FETCH_WORD_START:'FETCH_WORD_START',\n    FETCH_WORD_START_FROM_USER:'FETCH_WORD_START_FROM_USER',\n    FETCH_WORD_SUCCESS:'FETCH_WORD_SUCCESS',\n    FETCH_WORD_FAILURE:'FETCH_WORD_FAILURE'\n\n}\n\nexport default wordActionTypes;","import wordActionTypes from './word.types';\n\nconst INITIAL_STATE = {\n    collections : null,\n    isFetching:false,\n    error:null\n}\n\nconst wordReducer = (state=INITIAL_STATE,action)=>{\n    switch(action.type){\n        case wordActionTypes.CREATE_WORD_START:\n            return{\n                ...state,\n                isFetching:true,\n                error:null\n            }\n        case wordActionTypes.CREATE_WORD_SUCCESS:\n            return{\n                ...state,\n                isFetching:false,\n                collections:action.payload,                \n                error:null\n            }\n        case wordActionTypes.CREATE_WORD_FAILURE:\n            return{\n                ...state,\n                isFetching:false,\n                error:action.payload\n            }\n        case wordActionTypes.FETCH_WORD_START:\n            return{\n                ...state,\n                isFetching:true,\n                error:null\n            }\n        case wordActionTypes.FETCH_WORD_START_FROM_USER:\n            return{\n                ...state,\n                isFetching:true,\n                error:null\n            }\n        case wordActionTypes.FETCH_WORD_SUCCESS:\n            return{\n                ...state,\n                isFetching:false,\n                collections:action.payload,\n                error:null\n            }\n        case wordActionTypes.FETCH_WORD_FAILURE:\n            return{\n                ...state,\n                isFetching:false,\n                error:action.payload\n            }\n        default:\n            return state;\n\n    }\n}\n\nexport default wordReducer;","import {combineReducers} from 'redux';\nimport {persistReducer} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport userReducer from './user/user.reducer';\nimport wordReducer from './word/word.reducer';\n\nconst persistConfig = {\n   key: 'root',\n   storage,\n   whitelist:[]\n}\n\nconst rootReducer = combineReducers({\n   user:userReducer,\n   word:wordReducer\n});\n\nexport default persistReducer(persistConfig,rootReducer);","\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { cps } from 'redux-saga/effects';\n\nconst config= {\n    apiKey: \"AIzaSyCiOvCSbY7Le_sz-AlM_zxk_A4tWCoW5g8\",\n    authDomain: \"wordbook-c7d53.firebaseapp.com\",\n    databaseURL: \"https://wordbook-c7d53.firebaseio.com\",\n    projectId: \"wordbook-c7d53\",\n    storageBucket: \"wordbook-c7d53.appspot.com\",\n    messagingSenderId: \"983028184348\",\n    appId: \"1:983028184348:web:5c8fa8062aa05f8c14b6d9\",\n    measurementId: \"G-D22170SBM3\"\n  };\n\n  export const createUserProfileDocument = async (userAuth,additionalData) => {\n      if(!userAuth) return;\n      const userRef = firestore.doc(`users/${userAuth.uid}`);\n      const snapShot = await userRef.get();\n        \n      if(!snapShot.exists){\n          const {displayName,email} =userAuth;\n          const createdAt = new Date();\n          try{\n              await userRef.set({\n                  displayName,\n                  email,\n                  createdAt,\n                  ...additionalData\n              })\n\n          }catch(error){\n              console.log('error creating user',error.message)\n\n          }\n      }\n      return userRef;\n\n  }\n\n  export const createWordDocument = async (userAuth, word,additionalData) => {\n    if(!userAuth) return;\n    const wordRef = firestore.collection('words');\n    const createdAt = new Date();\n    try{\n        await wordRef.add({\n            ...word,\n            createdAt,\n            uid:userAuth.uid,\n            ...additionalData\n        })\n\n    }catch(error){\n        console.log('error creating word',error.message)\n\n    }\n  \n    return wordRef;\n\n  }\n  export const convertWordsnapshotToMap = words => {\n    const transformedWord = words.docs.map( doc =>{\n        const {content,meaning,uid} = doc.data();\n        return{\n            id:doc.id,\n            content,\n            meaning,\n            uid\n        }\n    });\n    console.log(transformedWord);\n    return transformedWord;\n    /*\n    return transformedWord.reduce((accumulator,collection)=>{\n        accumulator[collection.title.toLowerCase()] = collection;\n        return accumulator;\n    },{});\n    */\n  }\n\n  firebase.initializeApp(config);\n\n  export const addCollectionAndDocuments = async (collectionKey,objectsToAdd) => {\n      const collectionRef = firestore.collection(collectionKey);\n      console.log(collectionRef);\n      const batch = firestore.batch();\n      objectsToAdd.forEach(obj=>{\n          const newDocRef = collectionRef.doc();\n          batch.set(newDocRef,obj);\n      });\n      return await batch.commit();\n  }\n\n  export const convertCollectionSnapshotToMap = (collections) => {\n      const transformedCollection = collections.docs.map( doc =>{\n          const {title,items} = doc.data();\n          return{\n              routeName:encodeURI(title.toLowerCase()),\n              id:doc.id,\n              title,\n              items\n          }\n      });\n      console.log(transformedCollection);\n      return transformedCollection.reduce((accumulator,collection)=>{\n          accumulator[collection.title.toLowerCase()] = collection;\n          return accumulator;\n      },{});\n  };\n\n  export const getCurrentUser = () => {\n      return new Promise((resolve,reject) => {\n          const unsubscribe  =auth.onAuthStateChanged(userAuth=>{\n              unsubscribe();\n              resolve(userAuth);\n          },reject)\n      })\n  }\n\n  export const auth = firebase.auth();\n  export const firestore = firebase.firestore();\n\n  export const googleProvider = new firebase.auth.GoogleAuthProvider();\n  googleProvider.setCustomParameters({prompt:'select_account'});\n  export const signInwithGoogle = () =>auth.signInWithPopup(googleProvider);\n\n  export default firebase;","import userActionTypes from './user.types';\n\n\nexport const googleSignInStart = () => ({\n    type: userActionTypes.GOOGLE_SIGN_IN_START\n});\nexport const signInSuccess = user =>({\n    type: userActionTypes.SIGN_IN_SUCCESS,\n    payload: user\n});\nexport const signInFailure = error => ({\n    type: userActionTypes.SIGN_IN_FAILURE,\n    payload:error\n});\nexport const emailSignInStart = emailAndPassword => ({\n    type: userActionTypes.EMAIL_SIGN_IN_START,\n    payload:emailAndPassword\n});\nexport const checkUserSession = () => ({\n    type: userActionTypes.CHECK_USER_SESSION\n});\n\nexport const signOutStart = () =>({\n    type: userActionTypes.SIGN_OUT_START\n});\nexport const signOutSuccess = () =>({\n    type: userActionTypes.SIGN_OUT_SUCCESS\n});\nexport const signOutFailure = error => ({\n    type: userActionTypes.SIGN_OUT_FAILURE,\n    payload:error\n});\n\nexport const signUpStart = userCredentials =>({\n    type: userActionTypes.SIGN_UP_START,\n    payload:userCredentials\n});\nexport const signUpSuccess = ({user,addtionalData}) =>({\n    type: userActionTypes.SIGN_UP_SUCCESS,\n    payload:{user,addtionalData}\n});\nexport const signUpFailure = error => ({\n    type: userActionTypes.SIGN_UP_FAILURE,\n    payload:error\n});","import {takeLatest,put,all,call} from 'redux-saga/effects';\nimport {auth,googleProvider,createUserProfileDocument,getCurrentUser} from '../../firebase/firebase.utils';\nimport {signInSuccess,signInFailure,signOutSuccess,signOutFailure,signUpSuccess,signUpFailure} from './user.actions';\nimport userActionTypes from './user.types';\n\nexport function* getSnapshotFromUserAuth(userAuth){\n    try{\n        const userRef = yield call(createUserProfileDocument,userAuth);\n        const userSnapshot = yield userRef.get();\n        yield put(signInSuccess({ id:userSnapshot.id,...userSnapshot.data()}));\n    }catch(error){\n        yield put(signInFailure(error));\n    }\n}\nexport function* signInWithGoogle(){\n    try{\n        const {user} = yield auth.signInWithPopup(googleProvider);\n        yield getSnapshotFromUserAuth(user);\n    }catch(error){\n        yield put(signInFailure(error));\n    }\n}\nexport function* onGoogleSignInStart(){\n    console.log('onGoogleSignInStart')\n    yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START,signInWithGoogle)\n}\nexport function* signInWithEmail({payload:{email,password}}){\n    try{\n        const {user} = yield auth.signInWithEmailAndPassword(email,password);\n        yield getSnapshotFromUserAuth(user);\n    }catch(error){\n        yield put(signInFailure(error));\n    }\n}\nexport function* onEmailSignInStart(){\n    yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START,signInWithEmail);\n}\nexport function* isUserAuthenticated(){\n  \n    try{\n        const userAuth = yield getCurrentUser();\n        if(!userAuth) yield put(signInFailure());\n        yield getSnapshotFromUserAuth(userAuth);\n    }catch(error){\n        yield put(signInFailure(error))\n    }\n}\nexport function* onCheckUserSession(){\n    yield takeLatest(userActionTypes.CHECK_USER_SESSION,isUserAuthenticated);\n}\nexport function* signOut(){\n    try{\n        yield auth.signOut();\n        yield put(signOutSuccess());\n    }catch(error){\n        yield put(signOutFailure(error));\n    }\n}\nexport function* onSignOutStart(){\n    yield takeLatest(userActionTypes.SIGN_OUT_START,signOut);\n}\nexport function* signUp({payload:{email,password,displayName}}){\n    try{\n        const {user} = yield auth.createUserWithEmailAndPassword(email,password);\n        yield put(signUpSuccess({user,additionalData:{displayName}}));\n    }catch(error){\n        yield put(signUpFailure(error));\n    }\n\n}\nexport function* onSignUpStart(){\n    yield takeLatest(userActionTypes.SIGN_UP_START,signUp);\n}\nexport function* signInAfterSignUp({payload:{user,additionalData}}){\n    yield getSnapshotFromUserAuth(user,additionalData);\n}\nexport function* onSignUpSuccess(){\n    yield takeLatest(userActionTypes.SIGN_UP_SUCCESS,signInAfterSignUp);\n}\nexport function* userSagas(){\n    yield all([call(onGoogleSignInStart),call(onEmailSignInStart),call(onCheckUserSession),call(onSignOutStart),call(onSignUpStart),call(onSignUpSuccess)]);\n}","import wordActionTypes from './word.types';\n/*export const createWord = (word) => {\n  return (dispatch, getState, {getFirestore}) => {\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n    firestore.collection('words').add({\n      ...word,\n      authorName: profile.displayName,\n      authorId: authorId,\n      createdAt: new Date()\n    }).then(() => {\n      dispatch({ type: 'CREATE_WORD_SUCCESS' });\n    }).catch(err => {\n      dispatch({ type: 'CREATE_WORD_ERROR' }, err);\n    });\n  }\n};\n*/\nexport const createWordStart = contentAndMeaning => ({\n  type: wordActionTypes.CREATE_WORD_START,\n  payload:contentAndMeaning\n});\n\nexport const createWordSuccess = collections =>({\n  type: wordActionTypes.CREATE_WORD_SUCCESS,\n  payload:collections\n});\nexport const createWordFailure = error => ({\n  type: wordActionTypes.CREATE_WORD_FAILURE,\n  payload:error\n});\n\nexport const fetchWordStart = () => ({\n  type: wordActionTypes.FETCH_WORD_START\n});\nexport const fetchWordsStartFromUser = () => ({\n  type: wordActionTypes.FETCH_WORD_START_FROM_USER\n});\nexport const fetchWordsSuccess = collections =>({\n  type: wordActionTypes.FETCH_WORD_SUCCESS,\n  payload:collections\n});\nexport const fetchWordsFailure = error => ({\n  type: wordActionTypes.FETCH_WORD_FAILURE,\n  payload:error\n});","import {takeLatest,put,all,call} from 'redux-saga/effects';\nimport {firestore,createWordDocument,getCurrentUser,convertWordsnapshotToMap} from '../../firebase/firebase.utils';\nimport {createWordSuccess,createWordFailure,fetchWordsSuccess,fetchWordsFailure} from './word.actions';\nimport wordActionTypes from './word.types';\n\nexport function* ceateWord({payload:{content,meaning}}){\n    try{\n        \n        const userAuth = yield getCurrentUser();\n        if(!userAuth)return;\n        const wordRef = yield call(createWordDocument,userAuth,{content,meaning});\n        const snapshot = yield wordRef.where('uid', '==', userAuth.uid).get();\n        const wordsMap = yield call(convertWordsnapshotToMap,snapshot);\n        yield put(createWordSuccess(wordsMap));\n    }catch(error){\n        yield put(createWordFailure(error));\n    }\n}\n\n\n\nexport function* fetchWordsAsyncFromUser(){\n    try{\n        \n        const userAuth = yield getCurrentUser();\n        if(!userAuth)return;\n        console.log(userAuth.uid)\n       \n        const wordRef = firestore.collection('words');\n        const snapshot = yield wordRef.where('uid', '==', userAuth.uid).get();\n        const wordsMap = yield call(convertWordsnapshotToMap,snapshot);\n        yield put(fetchWordsSuccess(wordsMap));\n    }catch(error){\n        yield put(fetchWordsFailure(error.message));\n    }\n}\n\nexport function* fetchWordsAsync(){\n    try{\n        const wordRef = firestore.collection('words');\n        const snapshot = yield wordRef.get();\n        const wordsMap = yield call(convertWordsnapshotToMap,snapshot);\n        yield put(fetchWordsSuccess(wordsMap));\n    }catch(error){\n        yield put(fetchWordsFailure(error.message));\n    }\n}\nexport function* fetchWordsStartFromUser(){\n    yield takeLatest(wordActionTypes.FETCH_WORD_START_FROM_USER,fetchWordsAsyncFromUser)\n}\nexport function* fetchWordsStart(){\n    yield takeLatest(wordActionTypes.FETCH_WORD_START,fetchWordsAsync)\n}\nexport function* onCreateWordStart(){\n    yield takeLatest(wordActionTypes.CREATE_WORD_START,ceateWord);\n}\nexport function* wordSagas(){\n    yield all([call(onCreateWordStart),call(fetchWordsStart),call(fetchWordsStartFromUser)]);\n}","import {all,call} from 'redux-saga/effects';\n\nimport {userSagas} from './user/user.sagas';\nimport {wordSagas} from './word/word.sagas';\nexport default function* rootSaga(){\n    yield all([\n        call(wordSagas),\n        call(userSagas)\n        \n    ])\n}","import {createStore,applyMiddleware} from 'redux';\nimport logger from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\nimport {persistStore} from 'redux-persist';\n\nimport rootReducer from './root-reducer';\nimport rootSaga from './root-saga';\n\nconst sagaMiddleware =createSagaMiddleware();\nconst middlwares = [sagaMiddleware];\n\nif(process.env.NODE_ENV==='development'){\n    middlwares.push(logger);\n}\n\nexport const store = createStore(rootReducer,applyMiddleware(...middlwares));\nsagaMiddleware.run(rootSaga);\n\nexport const persistor = persistStore(store);\n\nexport default {store,persistor};","import {createSelector} from 'reselect';\n\nconst selectUser = state => state.user;\n\nexport const selectCurrentUser = createSelector(\n    [selectUser],\n    user => user.currentUser,\n)\n\nexport const selectSignCheckEnd = createSelector(\n    [selectUser],\n    user => user.signCheckEnd,\n)\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\n\nimport {createStructuredSelector} from 'reselect';\n\nimport {selectCurrentUser} from '../../redux/user/user.selectors';\nimport {signOutStart} from '../../redux/user/user.actions';\nimport './header.styles.scss';\n\nconst Header = ({currentUser,signOutStart}) =>(\n    <div className='header'>\n        <Link className='logo-container' to=\"/\"> \n            WORDBOOK\n        </Link>\n        <div className='options'>\n            <Link className='option' to='/word'>WORD</Link>\n            {currentUser?\n            <Link className='option' as='div' onClick={signOutStart}>SIGN OUT</Link>\n            :\n            <Link className='option' to='/signin'>SIGN IN</Link>\n            }\n        </div>\n    </div>\n);\n\nconst mapDispatchToProps = dispatch => ({\n    signOutStart:()=>dispatch(signOutStart())\n});\nconst mapStateToProps = createStructuredSelector({\n    currentUser:selectCurrentUser\n});\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Header);","import styled from 'styled-components';\n\nexport const SpinnerOverlay = styled.div`\n  height: 60vh;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const SpinnerContainer = styled.div`\n  display: inline-block;\n  width: 50px;\n  height: 50px;\n  border: 3px solid rgba(195, 195, 195, 0.6);\n  border-radius: 50%;\n  border-top-color: #636767;\n  animation: spin 1s ease-in-out infinite;\n  -webkit-animation: spin 1s ease-in-out infinite;\n  @keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n`;\n","import React from 'react';\nimport {SpinnerContainer,SpinnerOverlay} from './with-spinner.styles';\n\nconst WithSpinner = (WrappedComponent) => {\n    const Spinner = ({isLoading, ...otherProps})=>{\n        return isLoading?(\n            <SpinnerOverlay>\n                <SpinnerContainer/>\n            </SpinnerOverlay>\n        ):(\n            <WrappedComponent {...otherProps}/>\n        );\n    };\n    return Spinner;\n}\nexport default WithSpinner;","import {createSelector} from 'reselect';\n\nconst selectWord = state=>state.word;\n\nexport const selectCollections = createSelector(\n    [selectWord],\n    word=>word.collections\n)\nexport const selectIsCollectionFetching = createSelector(\n    [selectWord],\n    word=>word.isFetching\n)\n\nexport const selectIsCollectionsLoaded = createSelector(\n    [selectWord],\n    word => !!word.collections\n)","import React from 'react';\nconst WordItem = ({index,item,blur})=>{\n    return(\n        <li className='card'>\n            <div className='card-content'>\n                <div className=\"card-inner\">\n                <span class=\"num\">{index}</span>\n                <h3>{item.content}</h3>\n                <p className={blur?`blur`:``}>{item.meaning}</p>\n                </div>\n            </div>\n            \n        </li>\n    )\n\n}\n\n\nexport default WordItem;","\n\n\nimport React, { useState ,useEffect} from 'react';\nimport {connect} from 'react-redux';\n\nimport {createStructuredSelector} from 'reselect';\nimport {selectCollections,selectIsCollectionFetching,selectIsCollectionsLoaded} from '../../redux/word/word.selectors';\nimport {selectCurrentUser} from '../../redux/user/user.selectors';\nimport {fetchWordStart} from '../../redux/word/word.actions';\nimport WordItem from '../../components/word-item/word-item.component';\n\nconst setNum = (_num)=>{\n    return _num<10?'0'+_num:_num;\n}\nconst HomePage = ({collections,fetchWordStart,currentUser})=>{\n    useEffect (()=>{\n        fetchWordStart();\n    },[fetchWordStart]);\n   \n    \n    return(\n        <div>\n            <ul className='card-list'>\n                {\n                collections && collections.map((collection,index)=>(\n                    <WordItem key={collection.id} index={setNum(index+1)} item={collection} blur={currentUser?false:true}/>\n                    \n                \n                ))\n            }\n            </ul>\n        </div>\n    )\n\n}\nconst mapDispatchToProps = dispatch =>({\n    fetchWordStart:()=>dispatch(fetchWordStart())\n});\nconst mapStateToProps = createStructuredSelector({\n    collections:selectCollections,\n    currentUser:selectCurrentUser\n});\n\nexport default connect(mapStateToProps,mapDispatchToProps)(HomePage);","import {connect} from 'react-redux';\nimport {createStructuredSelector} from 'reselect';\nimport {compose} from 'redux';\n\nimport {selectSignCheckEnd} from '../../redux/user/user.selectors';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport HomePage from './homepage.component';\n\nconst mapStateToProps = createStructuredSelector({\n    isLoading:state=>!selectSignCheckEnd(state)\n});\n\nconst HomePageContainer = compose(connect(mapStateToProps),WithSpinner)(HomePage);\nexport default HomePageContainer;","import React, { useState ,useEffect} from 'react';\nimport {connect} from 'react-redux';\n\nimport {createStructuredSelector} from 'reselect';\nimport {selectCollections,selectIsCollectionFetching,selectIsCollectionsLoaded} from '../../redux/word/word.selectors';\nimport {fetchWordsStartFromUser} from '../../redux/word/word.actions';\nimport WordItem from '../word-item/word-item.component';\nimport './word-list.styles.scss';\nconst setNum = (_num)=>{\n    return _num<10?'0'+_num:_num;\n}\nconst WordList = ({collections,fetchWordsStartFromUser})=>{\n    useEffect (()=>{\n        fetchWordsStartFromUser();\n    },[fetchWordsStartFromUser]);\n   \n    \n    return(\n        <div>\n            <ul className='card-list'>\n                {\n                collections && collections.map((collection,index)=>(\n                    <WordItem key={collection.id} index={setNum(index+1)} item={collection}/>\n                    \n                \n                ))\n            }\n            </ul>\n        </div>\n    )\n\n}\nconst mapDispatchToProps = dispatch =>({\n    fetchWordsStartFromUser:()=>dispatch(fetchWordsStartFromUser())\n});\nconst mapStateToProps = createStructuredSelector({\n    collections:selectCollections\n});\n\nexport default connect(mapStateToProps,mapDispatchToProps)(WordList);","import React from 'react';\nimport './form-input.styles.scss';\n\nconst FormInput = ({handleChange,label,...otherProps})=>(\n    <div className='group'>\n        <input className='form-input' onChange={handleChange} {...otherProps}/>\n        {\n            label?\n            <label className={`${otherProps.value.length?'shrink':''} form-input-label`}>\n                {label}\n            </label>\n            :null\n        }\n    </div>\n)\n\nexport default FormInput;","import styled,{css} from 'styled-components';\nconst buttonStyles = css`\n    background-color:black;\n    color:white;\n    border:none;\n    &:hover {\n        background-color: white;\n        color: black;\n        border: 1px solid black;\n    }\n`;\nconst invertedButtonStyles = css`\n    background-color: white;\n    color: black;\n    border: 1px solid black;\n\n    &:hover {\n        background-color: black;\n        color: white;\n        border: none;\n    }\n`;\nconst googleSignInStyles = css`\n\n    background-color: #4285f4;\n    color: white;\n  \n    &:hover {\n      background-color: #357ae8;\n      border: none;\n    }\n`;\nconst getButtonStyles = props =>{\n    if(props.isGoogleSignIn){\n        return googleSignInStyles;\n    }\n    return props.inverted?invertedButtonStyles:buttonStyles;\n}\nexport const CustomButtonContainer = styled.button`\nmin-width: 165px;\nwidth: auto;\nheight: 50px;\nletter-spacing: 0.5px;\nline-height: 50px;\npadding: 0 35px 0 35px;\nfont-size: 15px;\nbackground-color: black;\ncolor: white;\ntext-transform: uppercase;\nfont-family: 'Open Sans Condensed';\nfont-weight: bolder;\nborder: none;\ncursor: pointer;\ndisplay: flex;\njustify-content: center;\n\n${getButtonStyles}\n\n\n`;","import React from 'react';\nimport {CustomButtonContainer} from './custom-button.styles';\n\n\nconst CustomButton =({children,...props}) => (\n    <CustomButtonContainer {...props}>{children}</CustomButtonContainer>\n    \n)\n\nexport default CustomButton;","import React, { useState} from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../../components/form-input/form-input.component';\nimport CustomButton from '../../components/custom-button/custom-button.component'\nimport { createWordStart } from '../../redux/word/word.actions';\n\n\nconst CreateWord =({createWordStart})=> {\n  const [wordContent,setwordContent] = useState({content:'',meaning:''});\n  const {content,meaning} =wordContent;\n\n  const handleChange = (event) => {\n    const {name,value} = event.target;\n    setwordContent({...wordContent,[name]:value});\n    \n  }\n  const handleSubmit = async event => {\n    event.preventDefault();\n    createWordStart(content,meaning);\n    setwordContent({content:'',meaning:''})\n \n  }\n \n    \n    return (\n        <form className=\"create-word\" onSubmit={handleSubmit}>\n         \n            <div className=\"create-word-inner\">  \n              <FormInput name=\"content\" type=\"text\" value={content} onChange={handleChange} label='content' required/>\n                     \n            \n              <FormInput name=\"meaning\" type=\"text\" onChange={handleChange} value={meaning} label=\"meaning\" required/>\n      \n              <CustomButton type=\"submit\">Add Wordbook</CustomButton>\n            </div>\n        </form>\n    )\n  \n}\n\n\n\n\nconst mapDispatchToProps = dispatch=>({\n  createWordStart:(content,meaning)=>dispatch(createWordStart({content,meaning}))\n})\nexport default connect(null, mapDispatchToProps)(CreateWord)\n","import React, { useEffect} from 'react';\nimport { connect } from 'react-redux';\nimport WordList from '../../components/word-list/word-list.component';\nimport CreateWord from '../../components/create-word/create-word.component';\n\nimport {createStructuredSelector} from 'reselect';\n\nimport {selectCurrentUser} from '../../redux/user/user.selectors';\nimport './word.styles.scss'\n\nconst WordPage =({history,currentUser})=> {\n  useEffect(()=>{\n    if (!currentUser) history.push('/signin');\n  },currentUser);\n \n    \n    return (\n      <div className=\"container\">\n        <CreateWord/>\n        <WordList/>\n\n      </div>\n    )\n  \n}\n\n\nconst mapStateToProps = createStructuredSelector({\n    currentUser:selectCurrentUser\n});\n\n\nexport default connect(mapStateToProps)(WordPage)\n","import {connect} from 'react-redux';\nimport {createStructuredSelector} from 'reselect';\nimport {compose} from 'redux';\n\nimport {selectSignCheckEnd} from '../../redux/user/user.selectors';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport WordPage from './word.component';\n\nconst mapStateToProps = createStructuredSelector({\n    isLoading:state=>!selectSignCheckEnd(state)\n});\n\nconst WordPageContainer = compose(connect(mapStateToProps),WithSpinner)(WordPage);\n//const WordPageContainer = connect(mapStateToProps)(WithSpinner(WordPage));\nexport default WordPageContainer;","import React,{useState} from 'react';\nimport {connect} from 'react-redux';\nimport './sign-in.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport {signInwithGoogle, auth} from '../../firebase/firebase.utils';\nimport {googleSignInStart,emailSignInStart} from  '../../redux/user/user.actions';\nconst SignIn =({emailSignInStart,googleSignInStart})=>{\n    const [userCrendentials,setCrendentials] = useState({email:'',password:''});\n    const {email,password} =userCrendentials;\n    const handleSubmit = async event =>{\n        event.preventDefault();\n        \n        emailSignInStart(email,password);\n        /*\n        try{\n            await auth.signInWithEmailAndPassword(email,password);\n            this.setState({email:'',password:''});\n        }catch(error){\n            console.log(error);\n        }\n        */\n        \n    }\n    const handleChange = event =>{\n        const {value,name} = event.target;\n        setCrendentials({...userCrendentials,[name]:value});\n    }\n    \n        return(\n            <div className=\"sign-in\">\n                <h2>I already have an account</h2>\n                <span>Sign in with your email and password</span>\n                <form onSubmit={handleSubmit}>\n                    \n                    <FormInput name=\"email\" type=\"email\" value={email} onChange={handleChange} label='email' required/>\n                \n                    <FormInput name=\"password\" type=\"password\" value={password} onChange={handleChange} label='passowrd' required/>\n                    <div className=\"buttons\">\n                        <CustomButton type=\"submit\">Sign In</CustomButton>\n                        <CustomButton type=\"button\" onClick={googleSignInStart} isGoogleSignIn>Sign In with Google</CustomButton>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n    \n\nconst mapDispatchToProps = dispatch=>({\n    googleSignInStart: ()=>dispatch(googleSignInStart()),\n    emailSignInStart:(email,password)=>dispatch(emailSignInStart({email,password}))\n})\nexport default connect(null,mapDispatchToProps)(SignIn);","import React,{useState} from 'react';\nimport {connect} from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport {signUpStart} from '../../redux/user/user.actions';\nimport './sign-up.styles.scss';\n\nconst SignUp = ({signUpStart})=>{\n\n    const [userCrendentials,setCrendentials] = useState({displayName:'',\n        email:'',\n        password:'',\n        confirmPassword:''});\n    const  {displayName,email,password,confirmPassword}=userCrendentials;\n    const handleSubmit = async event =>{\n        event.preventDefault();\n       \n        if(password!==confirmPassword){\n            alert(\"passwords don't match\");\n            return;\n        }\n       \n        signUpStart({displayName,email,password});\n     \n        /*\n        try{    \n            const {user} = await auth.createUserWithEmailAndPassword(email,password);\n            await createUserProfileDocument(user,{displayName});\n            this.setState({\n                displayName:'',\n                email:'',\n                password:'',\n                confirmPassword:''\n            });\n            \n        }catch(error){\n            console.log(error);\n        }\n        */\n    }\n    const handleChange = event =>{\n        const {value,name} = event.target;\n        setCrendentials({...userCrendentials,[name]:value});\n    }\n            \n    return(\n        <div className=\"sign-up\">\n            <h2 className='title'>I do not have an account</h2>\n            <span>Sign up with your email and password</span>\n            <form className='sign-up-form' onSubmit={handleSubmit}>\n                <FormInput name=\"displayName\" type=\"text\" value={displayName} onChange={handleChange} label='displayName' required/>\n            \n                <FormInput name=\"email\" type=\"email\" value={email} onChange={handleChange} label='email' required/>\n            \n                <FormInput name=\"password\" type=\"password\" value={password} onChange={handleChange} label='passowrd' required/>\n                <FormInput name=\"confirmPassword\" type=\"password\" value={confirmPassword} onChange={handleChange} label='confirmPassword' required/>\n                \n                <CustomButton type=\"submit\">Sign Up</CustomButton>\n\n            </form>\n        </div>\n    )\n}\n    \n\nconst mapDispatchToProps = dispatch =>({\n    signUpStart : userCredentials=>dispatch(signUpStart(userCredentials))\n});\nexport default connect(null,mapDispatchToProps)(SignUp);","import React, { useState ,useEffect} from 'react';\nimport {connect} from 'react-redux';\nimport './sign-in-and-sign-up.styles.scss';\nimport SignIn from '../../components/sign-in/sign-in.component';\nimport SignUp from '../../components/sign-up/sign-up.component';\n\nconst SignInAndSignUp = ({error}) =>{\n    useEffect (()=>{\n        console.log(error&& error.hasOwnProperty('code'))\n    },[error]);\n    return(\n    <div className=\"sign-in-and-sign-up\">\n        <span className='error'>{error&& error.hasOwnProperty('code')?error.message:` `}</span>\n        <div className='inner'>\n\n                \n        <SignIn/>\n        <SignUp/>\n        </div>\n    </div>\n    )\n    \n\n}\nconst mapStateToProps = ({user})=>({\n    error:user.error\n})\nexport default connect(mapStateToProps)(SignInAndSignUp);","import React, {useEffect} from 'react';\nimport  {Switch, Route, Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport logo from './logo.svg';\n\nimport Header from './components/header/header.component';\nimport HomePageContainer from './pages/homepage/homepage.container';\nimport WordPageContainer from './pages/word/word.container';\nimport SignInAndSignUp from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component'\nimport SignUp from './components/sign-up/sign-up.component';\n\n\n\nimport {createStructuredSelector} from 'reselect';\nimport {selectCurrentUser} from './redux/user/user.selectors';\n\nimport {checkUserSession} from  './redux/user/user.actions';\nimport './App.css';\n\nconst App = function({checkUserSession,currentUser}) {\n\n  useEffect( ()=>{\n    checkUserSession();\n     \n\n  },[checkUserSession]);\n \n  return (\n    <div className=\"App\">\n      <Header/>\n      <Switch>\n        <Route exact path='/' component={HomePageContainer}/>\n        <Route path='/wordbook' component={HomePageContainer}/>\n        <Route path='/word' component={WordPageContainer}/>\n        \n        <Route exact path='/signin' render={() => currentUser?(<Redirect to='/'/>):(<SignInAndSignUp/>)}/>\n        <Route exact path='/signup' render={() => currentUser?(<Redirect to='/'/>):(<SignUp/>)}/>\n        \n      </Switch>\n    </div>\n  );\n}\nconst mapDispatchToProps = dispatch =>({\n  checkUserSession:()=>dispatch(checkUserSession())\n});\nconst mapStateToProps = createStructuredSelector({\n  currentUser:selectCurrentUser\n});\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {PersistGate} from 'redux-persist/integration/react';\n\nimport {store,persistor} from './redux/store';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <PersistGate persistor={persistor}>\n        <App />\n      </PersistGate>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}